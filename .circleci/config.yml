version: 2.1

# Prerequisite
# Make sure you set secret enviroment variables in CICD
# DOCKER_USERNAME
# DOCKER_PASSWORD
# API_TOKEN

# REBUILD - it has default value "false", if need rebuild the image, turn it on with value "true"

parameters:
  rebuild:
    type: string
    default: "false"

jobs:
  build:
    docker:
      - image: alpine/docker-with-buildx
    environment:
      REBUILD: << pipeline.parameters.rebuild >>
    parameters:
      app_name:
        type: string # Accept the app name as a parameter
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          apk --no-cache --update add bash curl jq uuidgen
          echo $REBUILD

          # Build the application ${app_name} with the latest tag
          case ${app_name} in
            asma)
              bash -x ./build_asma.sh asma
              ;;
            trivy)
              bash -x ./build_${app_name}.sh
              ;;
            mongosh)
              bash -x ./build_${app_name}.sh
              ;;
            *)
              bash -x ./build.sh ${app_name}
              ;;
          esac

          # Versioning the new images
          bash -c "pushd ${app_name}; ./version-tag.sh; popd"

  scan:
    docker:
      - image: alpine/trivy:latest
    parameters:
      app_name:
        type: string # Accept the app name as a parameter
    steps:
      - checkout
      - run: |
          echo "Scanning image alpine/${app_name} ..."
          trivy image --format table --exit-code 1 \
             --ignore-unfixed --vuln-type os,library \
             --scanners vuln --severity CRITICAL,HIGH \
             --timeout 10m0s alpine/${app_name}
          echo "==== End of Scan ===="

reusejobs: &reusejobs
      - build:
          name: build_links
          app_name: links
          context: Docker-Hub
      - scan:
          name: scan_links
          app_name: links
          context: Docker-Hub
          requires:
            - build_links
      - build:
          name: build_lynx
          app_name: lynx
          context: Docker-Hub
      - scan:
          name: scan_lynx
          app_name: lynx
          context: Docker-Hub
          requires:
            - build_lynx
      - build:
          name: build_mysql
          app_name: mysql
          context: Docker-Hub
      - scan:
          name: scan_mysql
          app_name: mysql
          context: Docker-Hub
          requires:
            - build_mysql
      - build:
          name: build_psql
          app_name: psql
          context: Docker-Hub
      - scan:
          name: scan_psql
          app_name: psql
          context: Docker-Hub
          requires:
            - build_psql
      - build:
          name: build_curl
          app_name: curl
          context: Docker-Hub
      - scan:
          name: scan_curl
          app_name: curl
          context: Docker-Hub
          requires:
            - build_curl
      - build:
          name: build_socat
          app_name: socat
          context: Docker-Hub
      - scan:
          name: scan_socat
          app_name: socat
          context: Docker-Hub
          requires:
            - build_socat
      - build:
          name: build_httpie
          app_name: httpie
          context: Docker-Hub
      - scan:
          name: scan_httpie
          app_name: httpie
          context: Docker-Hub
          requires:
            - build_httpie
      - build:
          name: build_ansible
          app_name: ansible
          context: Docker-Hub
      - scan:
          name: scan_ansible
          app_name: ansible
          context: Docker-Hub
          requires:
            - build_ansible
      - build:
          name: build_flake8
          app_name: flake8
          context: Docker-Hub
      - scan:
          name: scan_flake8
          app_name: flake8
          context: Docker-Hub
          requires:
            - build_flake8
      - build:
          name: build_openssl
          app_name: openssl
          context: Docker-Hub
      - scan:
          name: scan_openssl
          app_name: openssl
          context: Docker-Hub
          requires:
            - build_openssl
      - build:
          name: build_sqlite
          app_name: sqlite
          context: Docker-Hub
      - scan:
          name: scan_sqlite
          app_name: sqlite
          context: Docker-Hub
          requires:
            - build_sqlite
      - build:
          name: build_bruno
          app_name: bruno
          context: Docker-Hub
      - scan:
          name: scan_bruno
          app_name: bruno
          context: Docker-Hub
          requires:
            - build_bruno
      - build:
          name: build_asma
          app_name: asma
          context: Docker-Hub
      - scan:
          name: scan_asma
          app_name: asma
          context: Docker-Hub
          requires:
            - build_asma

workflows:
  build_and_scan:
    jobs:
      *reusejobs

  nightly:
    jobs:
      *reusejobs
    triggers:
      - schedule:
          cron: "0 3 * * 6" # Scheduled run every Saturday at 3 AM UTC
          filters:
            branches:
              only:
                - master
                - main
